name: Tests

on:
  push:
    branches: [ development, master ]
    paths-ignore:
      - 'doc/**'
      - 'src/pretix/locale/**'
  pull_request:
    branches: [ development, master ]
    paths-ignore:
      - 'doc/**'
      - 'src/pretix/locale/**'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Tests
    strategy:
      matrix:
        python-version: [3.8]
        database: [postgres]
    steps:
      - uses: actions/checkout@v4
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: '12'
          postgresql db: 'pretix'
          postgresql user: 'postgres'
          postgresql password: 'postgres'
        if: matrix.database == 'postgres'
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install system dependencies
        run: sudo apt update && sudo apt install gettext mysql-client
      - name: Install Python dependencies
        run: pip3 install -e ".[dev]" psycopg2-binary
      - name: Run checks
        run: python manage.py check
        working-directory: ./src
      - name: Install JS dependencies
        working-directory: ./src
        run: make npminstall
      - name: Compile
        working-directory: ./src
        run: make all compress
      - name: Run tests
        working-directory: ./src
        run: PRETIX_CONFIG_FILE=tests/travis_${{ matrix.database }}.cfg py.test -n 3 -p no:sugar --cov=./ --cov-report=xml --reruns 3 tests --maxfail=100
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: src/coverage.xml
        if: matrix.database == 'postgres'
      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
